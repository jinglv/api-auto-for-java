<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TestModule"
           tests="4"
           failures="2"
           errors="0"
           skipped="0"
           time="0.009">
  <properties />
            <testcase name="test1" time="0.008" classname="com.test.TestMethodsDemo">
                <failure type="java.lang.AssertionError"
                  message="expected [2] but found [1]"
              >
<![CDATA[java.lang.AssertionError: expected [2] but found [1]
  org.testng.Assert.fail(Assert.java:97)
  org.testng.Assert.assertEqualsImpl(Assert.java:136)
  org.testng.Assert.assertEquals(Assert.java:118)
  org.testng.Assert.assertEquals(Assert.java:839)
  org.testng.Assert.assertEquals(Assert.java:849)
  com.test.TestMethodsDemo.test1(TestMethodsDemo.java:11)
  sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  java.lang.reflect.Method.invoke(Method.java:498)
  org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
  org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
  org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
  org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
  org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
  org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
  org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
  org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
  java.util.ArrayList.forEach(ArrayList.java:1257)
  org.testng.TestRunner.privateRun(TestRunner.java:770)
  org.testng.TestRunner.run(TestRunner.java:591)
  org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
  org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
  org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
  org.testng.SuiteRunner.run(SuiteRunner.java:304)
  org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
  org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
  org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
  org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
  org.testng.TestNG.runSuites(TestNG.java:1032)
  org.testng.TestNG.run(TestNG.java:1000)
  org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
  org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
  org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
  org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
  org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
  org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
  org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
      </failure>

          </testcase>
            <testcase name="logDemo" time="0.001" classname="com.test.TestMethodsDemo">
                <failure type="java.lang.RuntimeException"
                  message="这是我们自己运行的异常"
              >
<![CDATA[java.lang.RuntimeException: 这是我们自己运行的异常
  com.test.TestMethodsDemo.logDemo(TestMethodsDemo.java:27)
  sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  java.lang.reflect.Method.invoke(Method.java:498)
  org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
  org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
  org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
  org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
  org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
  org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
  org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
  org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
  java.util.ArrayList.forEach(ArrayList.java:1257)
  org.testng.TestRunner.privateRun(TestRunner.java:770)
  org.testng.TestRunner.run(TestRunner.java:591)
  org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
  org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
  org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
  org.testng.SuiteRunner.run(SuiteRunner.java:304)
  org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
  org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
  org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
  org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
  org.testng.TestNG.runSuites(TestNG.java:1032)
  org.testng.TestNG.run(TestNG.java:1000)
  org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
  org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
  org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
  org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
  org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
  org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
  org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
      </failure>

          </testcase>
  
  
            <testcase name="test2" time="0.000" classname="com.test.TestMethodsDemo" />
                <testcase name="test3" time="0.000" classname="com.test.TestMethodsDemo" />
      
</testsuite>
